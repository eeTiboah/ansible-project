---

- hosts: all
  become: yes
  pre_tasks:

  - name: update repository index
    tags: always
    apt: 
      update_cache: yes

- hosts: webserver
  become: true
  tasks:
  - name: install apache2 for debian
    tags: apache2
    apt:
      name: 
        - apache2
  
  - name: install certificates
    tags: php,certificates
    apt: 
      update_cache: true
      name: 
        - gnupg2
        - lsb-release
        - ca-certificates
        - apt-transport-https
        - software-properties-common
        - wget
   
  - name: add repo into sources list
    tags: php,repository
    apt_repository:
      repo:  ppa:ondrej/php


  - name: update repository index
    apt:
      update_cache: true

  - name: install php
    tags: php,repository
    apt:    
      update_cache: true  
      name: php8.0
               
  - name: install php extensions and git
    tags: php,php-extensions
    apt:
      name:
        - php8.0-cgi
        - php8.0-common
        - php8.0-curl
        - php8.0-dev
        - php8.0-gd
        - php8.0-fpm
        - php8.0-cli
        - php8.0-dba
        - php8.0-gmp
        - php8.0-imap
        - php8.0-intl
        - php8.0-ldap
        - php8.0-enchant
        - php8.0-mysql
        - php8.0-odbc
        - php8.0-phpdbg
        - php8.0-pspell
        - php8.0-readline
        - php8.0-tidy
        - php8.0-xsl
        - php8.0-zip
        - php8.0-soap
        - php8.0-xml
        - git

  - name: copy postgres folder to server
    tags: postgres
    copy:
      src: db/
      dest: /home/ubuntu/db/
  
  - name: change script permission
    tags: postgres,permission
    file:
      path: /home/ubuntu/db/psql_install.sh
      mode: 0755
  
  - name: run postgres shell
    tags: postgres
    shell: ./psql_install.sh
    args:
      chdir: /home/ubuntu/db/

  
  - name: install composer
    tags: composer
    shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    args:
      creates: /usr/local/bin/composer
  
  
  - name: install composer on ansible controller
    tags: composer
    connection: local
    package:
      name: composer
      state: present


  - name: clone laravel repo
    tags: composer,project
    git:
      dest: /home/ubuntu/myapp
      repo: https://github.com/f1amy/laravel-realworld-example-app.git
      update: no

  - name: change project ownership
    tags: composer
    file:
      path: /home/ubuntu/myapp/
      owner: ubuntu
      group: ubuntu
      mode: '0744'
      recurse: yes

  - name: update repo index
    apt:
      update_cache: true

  - name: change composer ownership
    tags: composer
    file:
      path: /usr/local/bin/composer
      owner: ubuntu
      group: ubuntu
      mode: '0744'
 
  - name: change composer permissions
    tags: composer,execute
    become: no
    file:
      dest: /usr/local/bin/composer
      mode: a+x
  
  - name: add composer to path
    tags: composer,execute
    lineinfile: 
      path: /root/.bashrc
      line: export PATH=$PATH:/usr/local/bin/
  
  
  - name: run composer install
    tags: composer,install
    become: no
    composer: command=install working_dir=/home/ubuntu/myapp/

  - name: copy myapp to apache location
    tags: locate
    copy:
      src: /home/ubuntu/myapp
      remote_src: yes
      dest: /var/www/html/

  - name: set www-data as owner
    tags: wwwdata
    file:
      path: /var/www/html/myapp
      owner: www-data
      group: www-data
      recurse: yes
  
  - name: change laravel app storage permissions
    tags: wwwdata
    file:
      dest: /var/www/html/myapp/storage
      owner: www-data
      mode: '0775'
      recurse: yes
  
  - name: change from .env.example to .env
    tags: env,wwwdata
    command: mv .env.example .env
    args:
      chdir: /var/www/html/myapp/
  
  - name: replace .env
    tags: webphp
    copy:
      src: .env
      dest: /var/www/html/myapp/.env

  - name: generate artisan key
    tags: artisan
    command: php artisan key:generate
    args:
      chdir: /var/www/html/myapp/

  
  - name: replace web.php
    tags: webphp
    copy:
      src: web.php
      dest: /var/www/html/myapp/routes/web.php

  - name: copy rendered.conf to sites-available location
    tags: locate
    copy:
      src: rendered.conf
      dest: /etc/apache2/sites-available
  
  - name: disable default conf
    tags: disable
    command: a2dissite 000-default.conf
    args:
      chdir: /etc/apache2/sites-available

  - name: enable site rendered
    tags: ensite
    command: a2ensite rendered.conf
    args:
      chdir: /etc/apache2/sites-available

  - name: module rewrite
    tags: rewrite
    command: a2enmod rewrite
    args:
      chdir: /etc/apache2/sites-available
  
  - name: restart apache
    tags: rewrite
    command: systemctl reload apache2
    args:
      chdir: /etc/apache2/sites-available